<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberns">
    
    <!-- 로그인 인증 -->
    <select id="login_check" parameterType="String" resultType="member">
     select * from member where member_id=#{id} and member_delok='y'
    </select>
    
     <!-- 로그인 중복 -->
    <select id="login_check2" parameterType="String" resultType="member">
     select * from member where member_id=#{id}
    </select>
    
    <!-- 비번 인증 -->
    <select id="pw_check" parameterType="String" resultType="member">
     select * from member where member_id=#{id}
    </select>
   
     <!-- 닉네임 중복 -->
    <select id="nick_check" parameterType="String" resultType="member">
     select * from member where member_nickname=#{nick}
    </select>
    
     <!-- 아이디 검색 -->
    <select id="id_find" resultType="member" parameterType="member">
     select * from member where member_name=#{member_name} and member_email=#{member_email} and member_delok='y'
    </select>
    
    <!-- 비번 검색 -->
    <select id="pwd_find" resultType="member" parameterType="member">
     select * from member where member_id=#{member_id} and member_name=#{member_name} and member_delok='y'
    </select>
    
    <!-- 회원저장 -->
   <insert id="member_join" parameterType="member">
     insert into member (member_id,member_passwd,member_name,
     member_nickname,member_gender,member_phone,member_age,
     member_email,member_address,member_file,member_delok) 
     values(#{member_id},#{member_passwd},#{member_name},
     #{member_nickname},#{member_gender},#{member_phone},
     #{member_age},#{member_email},#{member_address},
     #{member_file, jdbcType=VARCHAR},'y')
    <!-- jdbcType=VARCHAR = null값 허용 -->
    </insert>
    
    <!-- 회원수정 -->
    <update id="member_edit" parameterType="member">
     update member set member_passwd=#{member_passwd},
     member_phone=#{member_phone},member_age=#{member_age},member_email=#{member_email},
     member_address=#{member_address},member_file=#{member_file,jdbcType=VARCHAR} 
     where member_id=#{member_id}
    </update>    
    
    
     <!-- 탈퇴 전 파티방 검색 -->
    <select id="find_party" parameterType="String" resultType="party">
	 select * from party where party_no = (
	 select party_no from partymanager where ishost = 1 
	 and member_id =#{findparty}) 
	 and party_count != 0
    </select>
    
    
    <!-- 회원삭제 -->
    <update id="member_delete" parameterType="member">
      update member set member_delok='n'
      where member_id=#{member_id}
    </update>
    
     <!-- 탈퇴아이디 검색 -->
    <select id="id_drop" resultType="member">
     select * from member where member_delok='n'
    </select>
    
     <!-- 참여 파티방 검색 -->
    <select id="joinparty" parameterType="String" resultType="party">
     select * from party where party_no = 
     any(select party_no from partymanager where member_id =#{member_id}) 
    </select>
    
    <!-- 게시글 삭제 비밀번호 구하기 -->
    <select id="findpasswd" parameterType="String" resultType="String">
    select member_passwd from member where member_id=#{member_id}
    </select>
</mapper>








